library(DeclareDesign)
#El ministerio de educacion busca que haya 180 dias de clases
library(tidyverse)
efect_mc<-0.04
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=rnorm(N,sd=0.001),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.025-efect_mc)*periodo+U)
))
Y_Z_1=sum(Y_Z_1)
db2<-db %>% group_by(nina) %>% summaryze(Y_Z_0=sum(Y_Z_0),
)
db2<-db %>% group_by(nina) %>% summaryze(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
db2<-db %>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
View(db2)
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=rnorm(N,sd=0.001),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.025-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, estimand = "PATE")
}
design <- simple_design(muestras = 50,efect_mc=0.003)
db2<-draw_data(design)
table(db2$Z)
require(lfe)
summary(felm(Y~Z,db2))
designs <- expand_design(
simple_design,
muestras = c(100),
efect_mc = c(0.003,0.006,0.01,0.02)
)
diagnose_design(designs)
designs <- expand_design(
simple_design,
muestras = c(300),
efect_mc = c(0.01,0.02)
)
diagnose_design(designs)
summary(felm(Y~Z,db2))
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=rnorm(N,sd=0.001),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.1*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.1-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, estimand = "PATE")
}
designs <- expand_design(
simple_design,
muestras = c(300),
efect_mc = c(0.01,0.02,.05,.1)
)
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=rnorm(N,sd=0.001),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.1*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.1-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, estimand = "PATE")
}
design <- simple_design(muestras = 50,efect_mc=0.003)
db2<-draw_data(design)
table(db2$Z)
require(lfe)
summary(felm(Y~Z,db2))
rm(db)
designs <- expand_design(
simple_design,
muestras = c(300),
efect_mc = c(0.01,0.02,.05,.1)
)
diagnose_design(designs)
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=runif(-0.01,0.01),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.1*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.1-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, estimand = "PATE")
}
design <- simple_design(muestras = 50,efect_mc=0.003)
db2<-draw_data(design)
table(db2$Z)
require(lfe)
summary(felm(Y~Z,db2))
rm(db)
designs <- expand_design(
simple_design,
muestras = c(300),
efect_mc = c(0.01,0.02,.05,.1)
)
diagnose_design(designs)
?runif
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=runif(N,min=-0.01,max=0.01),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.1*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.1-efect_mc)*periodo+U)
))
View(db)
rm(db)
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=runif(N,min=-0.01,max=0.01),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.1*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.1-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, estimand = "PATE")
}
design <- simple_design(muestras = 50,efect_mc=0.003)
db2<-draw_data(design)
table(db2$Z)
require(lfe)
summary(felm(Y~Z,db2))
designs <- expand_design(
simple_design,
muestras = c(300),
efect_mc = c(0.01,0.02,.05,.1)
)
diagnose_design(designs)
warings()
warnings()
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=runif(N,min=-0.01,max=0.01),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-0.1*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(0.1-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, inquiry = "PATE")
}
design <- simple_design(muestras = 50,efect_mc=0.003)
db2<-draw_data(design)
table(db2$Z)
require(lfe)
summary(felm(Y~Z,db2))
rm(db)
designs <- expand_design(
simple_design,
muestras = c(300),
efect_mc = c(0.01,0.02,.05,.1)
)
efecto_periodo<-.1
efect_mc<-0.04
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 1000
),
dias_clase = add_level(
N = 180,
U=runif(N,min=-0.01,max=0.01),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.85-efecto_periodo*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.85-(efecto_periodo-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, inquiry = "PATE")
}
design <- simple_design(muestras = 50,efect_mc=0.003)
db2<-draw_data(design)
table(db2$Z)
require(lfe)
summary(felm(Y~Z,db2))
designs <- expand_design(
simple_design,
muestras = c(100,200,300,400),
efect_mc = c(0.01,0.02,.05,.1)
)
diagnose_design(designs)
simple_design<-function(muestras,efect_mc){
db<-fabricate(
nina = add_level(
N = 10000
),
dias_clase = add_level(
N = 180,
U=runif(N,min=-0.01,max=0.01),
periodo= rbinom(N, size = 1, prob = 0.08),
#asistio = rbinom(N, size = 1, prob = 0.85-0.025*periodo+U)
Y_Z_0 = rbinom(N, size = 1, prob = 0.9-efecto_periodo*periodo+U),
Y_Z_1 = rbinom(N, size = 1, prob = 0.9-(efecto_periodo-efect_mc)*periodo+U)
))%>% group_by(nina) %>% summarize(Y_Z_0=sum(Y_Z_0),
Y_Z_1=sum(Y_Z_1))
declare_model(data=db)+
declare_inquiry(PATE = mean(Y_Z_1 - Y_Z_0)) +
declare_sampling(S = complete_rs(N, n = muestras)) +
declare_assignment(Z = complete_ra(N, prob = 0.5)) +
declare_measurement(Y = reveal_outcomes(Y ~ Z))  +
declare_estimator(Y ~ Z, model = difference_in_means, inquiry = "PATE")
}
design <- simple_design(muestras = 450,efect_mc=.10)
db2<-draw_data(design)
table(db2$Z)
summary(lm(Y~Z,db2))
res<-summary(lm(Y~Z,db2))
res$coefficients
res$coefficients[2]
res$coefficients[2]/res$coefficients[1]
res$coefficients[2]/res$coefficients[1]*100
View(db2)
install.packages("packman")
install.packages("pacman")
