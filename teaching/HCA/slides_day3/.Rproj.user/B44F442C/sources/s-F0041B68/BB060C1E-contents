
We can now use the following information to augment the replication:
  
  ```{r}
# Zenodo DOI prefix for Sandbox
zenodo.prefix <- "10.5072/zenodo"
# Specific ID for my deposit - resolves to a latest version!
zenodo.id <- "910135"
# We will recover the rest from Zenodo API
zenodo.api = "https://sandbox.zenodo.org/api/records/"
```


(Behind the scenes)

We will parse the information that Zenodo gives us through an API:
  
  > `r paste0(zenodo.api,zenodo.id)`

<div style="text-align: center;">
  <img src="figs/Zenodo_query_1.png" width="80%" alt="zenodo api" />
  </div>
  
  
  ---
  # Automating the data acquisition
  
  
  ```{r, eval=FALSE}
# needs rjson, tidyr, dplyr
```
We download the metadata from the API (to see what this looked like **before** we made any changes, see [this version in the Github repository](https://github.com/labordynamicsinstitute/tutorial-data-sharing-archiving-2021/blob/d3714700ce7e1758ac75d0ac07b730e421935333/data/metadata.json))
```{r, eval=FALSE}

download.file(paste0(zenodo.api,zenodo.id),destfile=file.path(dataloc,"metadata.json"))
```
We read the JSON in:
  ```{r, eval=FALSE}
latest <- fromJSON(file=file.path(dataloc,"metadata.json"))
```
We get the links to the actual XLSX files (and the Survey):
  ```{r, eval=FALSE}
file.list <- as.data.frame(latest$files) %>% select(starts_with("self")) %>% gather()
```


---
  # Automating the data acquisition
  
  
  We download all the xlsx files, by looking whether the filename has `xlsx` in it:
  ```{r, eval=FALSE}
for ( value in file.list$value ) {
  print(value)
  if ( grepl("xlsx",value ) ) {
    print("Downloading...")
    file.name <- basename(value)
    download.file(value,destfile=file.path(workpath,basename(value)))
  } else {
    print("Skipping.")
  }
}
```


---
  # Re-use of our own archive
  
  
  Now that we have downloaded our own archival version of the survey, we can use it:
  
  ```{r, eval=FALSE}
browser_survey <- read_excel(file.path(workpath,"browser-survey.xlsx"))
```

We should also preserve WHICH version we are actually using:
  
  ```{r, eval=FALSE}
# The deposit ID always points to the latest version, but we want to identify which version that is:
latest.doi <- latest$doi
latest.doi
```

---
  # Crosstab
  
  
  ```{r, eval=FALSE}
browser_survey %>% 
  group_by(`What browser do you use?`) %>%
  summarize(`How many browser tabs do you have open?`) -> table

```





---
  # Result
  
  
  ![node345](cycle3-node345.png)

<center>
  ```{r, echo=FALSE, eval=FALSE}
table %>% 
  kable(caption=paste0("Browser tabs by browser type."))
```

Source: r paste0("https://doi.org/",latest$doi),<br/>
  created r latest$created.
</center>
  
  ---
  # Lessons learned
  
  
  ![cycle](figs/cycle3.png)

- Goal 1: Be able to curate the data necessary for reproducible analysis `r check`
- Goal 2: Know when to do so `r check`
- Goal 3: Choose license (while respecting ethics)

***
  
  ![zenodo filelist](figs/zenodo-filelist-2.png) 

or [latest!](https://doi.org/10.5072/zenodo.910135)


